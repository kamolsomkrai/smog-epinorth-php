<?php

namespace app\controllers;

use Yii;
use app\models\ApiImports;
use app\models\Mongo;
use app\models\Uploadfiles;
use yii\data\ActiveDataProvider;
use yii\filters\AccessControl;
use yii\helpers\ArrayHelper;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\web\UploadedFile;

/**
 * UploadController implements the CRUD actions for Uploadfiles model.
 */
class UploadController extends Controller
{

    public $uploadFolder = 'uploads';
    /**
     * @inheritDoc
     */
    public function behaviors()
    {
        return array_merge(
            parent::behaviors(),
            [

                'verbs' => [
                    'class' => VerbFilter::className(),
                    'actions' => [
                        'delete' => ['POST'],
                    ],
                ],
                'access' => [
                    'class' => AccessControl::className(),
                    'only' => ['index','create','update','view'],
                    'rules' => [
                        [
                            'actions'=>['index','create','update','view'],
                            'allow'=> !\Yii::$app->user->isGuest,
                            'roles'=>['@'],
                        ],
                    ],
                ],
            ]
        );
    }

    public function beforeAction($action)
    {
        if($action->id == "json" || $action->id == 'send' || $action->id == "delete"){
            \Yii::$app->controller->enableCsrfValidation = false;
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Lists all Uploadfiles models.
     *
     * @return string
     */
    public function actionIndex()
{
    $model = new Uploadfiles();

    if(\Yii::$app->request->isPost){
        $model->load(\Yii::$app->request->post());
        $model->uploadedFile = UploadedFile::getInstance($model,'uploadedFile');
        $model->hospcode = \Yii::$app->user->identity->hospcode;
        $model->user_id = \Yii::$app->user->id;

        if($model->validate()){
            try {
                $rowCount = $model->import();
                if($rowCount > 0){
                    Yii::$app->session->setFlash('success', "นำเข้า {$rowCount} แถวเรียบร้อยแล้ว");
                    return $this->redirect(['view', 'id' => $model->id]);
                } else {
                    Yii::$app->session->setFlash('warning', 'ไม่มีข้อมูลถูกนำเข้า');
                }
            } catch (\Exception $e) {
                Yii::$app->session->setFlash('error', 'การนำเข้าล้มเหลว: ' . $e->getMessage());
            }
        } else {
            Yii::$app->session->setFlash('error', 'การตรวจสอบล้มเหลว: ' . implode(', ', $model->getFirstErrors()));
        }
    }

    $dataProvider = new ActiveDataProvider([
        'query' => Uploadfiles::find()->orderBy(['id'=>SORT_DESC]),
        'sort'=>false,
    ]);

    return $this->render('index', [
        'dataProvider' => $dataProvider,
        'model' => $model,
    ]);
}


    /**
     * Displays a single Uploadfiles model.
     * @param int $id ID
     * @return string
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Uploadfiles model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return string|\yii\web\Response
     */
    public function actionCreate()
    {
        $model = new Uploadfiles();

//        if ($this->request->isPost) {
//            if ($model->load($this->request->post()) && $model->save()) {
//                return $this->redirect(['view', 'id' => $model->id]);
//            }
//        } else {
//            $model->loadDefaultValues();
//        }

        return $this->render('create', [
            'model' => $model,
        ]);
    }

    /**
     * Updates an existing Uploadfiles model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param int $id ID
     * @return string|\yii\web\Response
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

//        if ($this->request->isPost && $model->load($this->request->post()) && $model->save()) {
//            return $this->redirect(['view', 'id' => $model->id]);
//        }

        return $this->render('update', [
            'model' => $model,
        ]);
    }

    /**
     * Finds the Uploadfiles model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param int $id ID
     * @return Uploadfiles the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Uploadfiles::findOne(['id' => $id])) !== null) {
//            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }


    public function actionJson(){

        if(\Yii::$app->request->isPost){

            $data = \Yii::$app->request->getRawBody();
            $dataArray = json_decode($data);
            $datas = ArrayHelper::toArray($dataArray->data,[
                'app/models/SmogImport'=>[
                    'hospcode', 'pid', 'birth', 'sex', 'hn', 'seq', 'date_serv', 'diagtype', 'diagcode', 'clinic', 'provider', 'd_update', 'cid', 'appoint'
                ],
                ]);

            $sql = "replace into smog_import(";
            $col = array_keys($datas[0]);
            $sql .= implode(",",$col);
            $sql .=") values";

            $values = [];
            foreach ($datas as  $rows) {
                $value = implode("','",$rows) ;
                if(($value[6] != '0000-00-00') && (!empty($value[6]))){
                    $values[] = "('".$value."')";
                }

//                $checkModel = Mongo::find()->getCollection()->findOne([
//                    'hospcode'=> $rows['hospcode'],
//                    'pid'=> $rows['pid'],
//                    'seq'=> $rows['seq'],
//                    'date_serv'=> $rows['date_serv'],
//                    'diagcode'=> $rows['diagcode'],
//                ]);
//                if(empty($checkModel)){
//                    Mongo::find()->getCollection()->insert($rows);
//                }
            }

            $count = count($values);
            $values = implode(",",$values);

            $sql = "$sql $values;";
            \Yii::$app->db->createCommand($sql)->execute();

            $model = new ApiImports();
            $model->hospcode = $dataArray->hcode;
            $model->rec = $count;
            $model->save();
            return "OK";
        }
    }

}


